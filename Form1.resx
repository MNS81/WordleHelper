<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>